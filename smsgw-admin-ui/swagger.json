{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "SMS Gateway Admin Web API",
    "contact": {
      "name": "Unified Communication S/B"
    }
  },
  "host": "localhost:8081",
  "basePath": "/smsgw/api",
  "tags": [
    {
      "name": "Account Resource"
    },
    {
      "name": "Anti Spoof Define Resource"
    },
    {
      "name": "Anti Spoof Profile Resource"
    },
    {
      "name": "Anti Spoof Resource"
    },
    {
      "name": "Authentication Profile Resource"
    },
    {
      "name": "DefAf Resource"
    },
    {
      "name": "Error List Resource"
    },
    {
      "name": "Filter Authen Resource"
    },
    {
      "name": "Filter Rule Resource"
    },
    {
      "name": "Filter Group Resource"
    },
    {
      "name": "Filter Resource"
    },
    {
      "name": "Http Interface Resource"
    },
    {
      "name": "Header Request Resource"
    },
    {
      "name": "Map Interface Resource"
    },
    {
      "name": "Miscellaneous Resource"
    },
    {
      "name": "Next Retry Profile Resource"
    },
    {
      "name": "Number Blacklist Resource"
    },
    {
      "name": "Period Map Profile Resource"
    },
    {
      "name": "Traffic Rate Resource"
    },
    {
      "name": "Retry By Error Profile Resource"
    },
    {
      "name": "Retry Level Profile Resource"
    },
    {
      "name": "Route Profile Resource"
    },
    {
      "name": "Route Destination Group Resource"
    },
    {
      "name": "Smpp Interface Resource"
    },
    {
      "name": "SMS Tracing"
    },
    {
      "name": "Spamfilter Profile Resource"
    },
    {
      "name": "System Variable Resource"
    },
    {
      "name": "Translation Profile Resource"
    },
    {
      "name": "Validity Profile Resource"
    },
    {
      "name": "Window Profile Resource"
    }
  ],
  "schemes": ["http", "https"],
  "paths": {
    "/account/validate-name": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Validate the uniqueness of Account Name.",
        "description": "",
        "operationId": "validateName",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/get-filtered": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Get list of Accounts by account type and filtered by keywords.",
        "description": "",
        "operationId": "getFilteredByAccountType",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "account_type",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOAccountDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/get-all-filtered": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Get all Accounts filtered by keywords.",
        "description": "",
        "operationId": "getFilteredByAccountType_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOAccountDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/create": {
      "post": {
        "tags": ["Account Resource"],
        "summary": "Create Account Profile.",
        "description": "",
        "operationId": "createAccountProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Account Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/delete/{id}": {
      "delete": {
        "tags": ["Account Resource"],
        "summary": "Delete Account Profile.",
        "description": "",
        "operationId": "deleteAccountProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Account Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Account Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/validate/outgoing-account-associate": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Validate whether there's RouteGroups associated with the Account.",
        "description": "",
        "operationId": "validateOutgoingAccountAssociate",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "account_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/update": {
      "put": {
        "tags": ["Account Resource"],
        "summary": "Update Account Profile.",
        "description": "",
        "operationId": "updateAccountProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Account Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Account Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/{account_id}": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Get Account by ID.",
        "description": "",
        "operationId": "getAccountProfileById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "The Account Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/account/form-field": {
      "get": {
        "tags": ["Account Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "getAccountProfileForms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "protoId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "protocolProfileId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/anti-spoof-define/all": {
      "get": {
        "tags": ["Anti Spoof Define Resource"],
        "summary": "Get all anti spoof defines.",
        "description": "",
        "operationId": "getAllAntiSpoofDefine",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AntiSpoofDefineDTOListResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/anti-spoof-profile/get-filtered": {
      "get": {
        "tags": ["Anti Spoof Profile Resource"],
        "summary": "Get list of anti spoof profiles and filtered by keywords.",
        "description": "",
        "operationId": "getFiltered",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Page number. Starts from 1",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of records per page",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to filter the results",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/AntiSpoofPaginatedResponseDTOResponseDTO"
            }
          }
        }
      }
    },
    "/anti-spoof-profile/{id}": {
      "get": {
        "tags": ["Anti Spoof Profile Resource"],
        "operationId": "getAntiSpoofProfileById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof profile to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the anti spoof profile. If ResponseDTO.code is not 0,then consider the response as failed.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          }
        }
      },
      "put": {
        "tags": ["Anti Spoof Profile Resource"],
        "summary": "Update an existing anti spoof profile.",
        "description": "",
        "operationId": "updateAntiSpoofProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof profile to update. This id will be used to identify the anti spoof profile to update instead of the id in the AntiSpoofProfileDTO object.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeAntiSpoofs",
            "in": "query",
            "description": "Update the anti spoofs",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "in": "body",
            "name": "body",
            "description": "The anti spoof profile to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AntiSpoofProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          }
        }
      },
      "delete": {
        "tags": ["Anti Spoof Profile Resource"],
        "summary": "Delete an existing anti spoof profile.",
        "description": "",
        "operationId": "deleteAntiSpoofProfileById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof profile to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Anti spoof profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/anti-spoof-profile": {
      "post": {
        "tags": ["Anti Spoof Profile Resource"],
        "summary": "Create a new anti spoof profile.",
        "description": "",
        "operationId": "createAntiSpoofProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The anti spoof profile to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AntiSpoofProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/anti-spoof": {
      "post": {
        "tags": ["Anti Spoof Resource"],
        "summary": "Create a new anti spoof.",
        "description": "",
        "operationId": "createAntiSpoof",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The anti spoof to create.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AntiSpoofDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anti spoof has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/anti-spoof/{id}": {
      "get": {
        "tags": ["Anti Spoof Resource"],
        "operationId": "getAntiSpoofById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof to retrieve.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Anti spoof found.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "put": {
        "tags": ["Anti Spoof Resource"],
        "summary": "Update an existing anti spoof.",
        "description": "",
        "operationId": "updateAntiSpoof",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof to update. This id will be used to identify the anti spoof to update instead of the id in the request body.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The anti spoof to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AntiSpoofDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anti spoof has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      },
      "delete": {
        "tags": ["Anti Spoof Resource"],
        "summary": "Delete an existing anti spoof.",
        "description": "",
        "operationId": "deleteAntiSpoofById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the anti spoof to delete.",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          }
        }
      }
    },
    "/anti-spoof/address-pattern/validate": {
      "get": {
        "tags": ["Anti Spoof Resource"],
        "summary": "Validate anti spoof address pattern is valid in the anti spoof profile.",
        "description": "",
        "operationId": "validateAntiSpoofAddressPattern",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          },
          {
            "name": "antiSpoofProfileId",
            "in": "query",
            "description": "The anti spoof profile id.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "addressPattern",
            "in": "query",
            "description": "The name to validate.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/update": {
      "put": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Update Authentication Profile.",
        "description": "",
        "operationId": "update",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Authentication Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Authentication Profile was not found with given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/create": {
      "post": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Create Authentication Profile.",
        "description": "",
        "operationId": "create",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthenticationProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Authentication Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/validate-src-dst": {
      "get": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Validate the uniqueness of adress pattern and address ID pair.",
        "description": "",
        "operationId": "validateSourceDestinationAddressPattern",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorProfileId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "addressPattern",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "addressId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/validate-name": {
      "get": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Validate the uniqueness of Authentication Profile name.",
        "description": "",
        "operationId": "validateName_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "auth_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/delete/{auth_profile_id}": {
      "delete": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Delete Authentication Profile.",
        "description": "",
        "operationId": "deleteById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth_profile_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Authentication Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Authentication Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/get-filtered": {
      "get": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Get list of Authentication Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOAuthenticationProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/{auth_profile_id}": {
      "get": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Get Authentication Profile by ID.",
        "description": "",
        "operationId": "getById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "auth_profile_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Authentication Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/authentication-profile/form-field": {
      "get": {
        "tags": ["Authentication Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/def-af/all": {
      "get": {
        "tags": ["DefAf Resource"],
        "summary": "Get all DefAf.",
        "description": "",
        "operationId": "getAllDefAfs",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "description": "A unique reference id for this response.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DefAfDTOListResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/error-list/get-filtered": {
      "get": {
        "tags": ["Error List Resource"],
        "summary": "Get list of Error List filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_2",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "interfaceType",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOErrorMappingDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/get-filtered": {
      "get": {
        "tags": ["Filter Authen Resource"],
        "summary": "Get list of filter authens and filtered by keywords.",
        "description": "",
        "operationId": "getAuthenFiltered",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterAuthenDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/create": {
      "post": {
        "tags": ["Filter Authen Resource"],
        "summary": "Create Filter Authen.",
        "description": "",
        "operationId": "createFilter",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterAuthenDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authen has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/validate-name": {
      "get": {
        "tags": ["Filter Authen Resource"],
        "summary": "Validate the uniqueness of Authen Name.",
        "description": "",
        "operationId": "validateName_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/{authen_id}": {
      "get": {
        "tags": ["Filter Authen Resource"],
        "summary": "Get Authen by ID.",
        "description": "",
        "operationId": "getAuthenById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "authen_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Authen was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/update": {
      "put": {
        "tags": ["Filter Authen Resource"],
        "summary": "Update Authen by ID.",
        "description": "Update Authen by ID. It also updates the Authen Rule Profile and Authen Rule Profile Action.",
        "operationId": "updateFilter",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterAuthenDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authen has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Authen was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-authen/global": {
      "get": {
        "tags": ["Filter Authen Resource"],
        "summary": "Gets Global Authen.",
        "description": "It only returns first global authen. This api assumes that there is only one global authen.",
        "operationId": "getGlobalAuthen",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOFilterAuthenDTO"
            }
          },
          "404": {
            "description": "Authen was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-rule/create": {
      "post": {
        "tags": ["Filter Rule Resource"],
        "summary": "Create Filter Rule.",
        "description": "",
        "operationId": "createFilter_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterAuthenRuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-rule/validate-name": {
      "get": {
        "tags": ["Filter Rule Resource"],
        "summary": "Validate the uniqueness of Rules Name.",
        "description": "",
        "operationId": "validateName_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-rule/{rule_id}": {
      "get": {
        "tags": ["Filter Rule Resource"],
        "summary": "Get Rule by ID.",
        "description": "",
        "operationId": "getAuthenById_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "rule_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Rule was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-rule/update": {
      "put": {
        "tags": ["Filter Rule Resource"],
        "summary": "Update Filter Rule.",
        "description": "",
        "operationId": "updateFilter_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterAuthenRuleDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Rule was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-rule/get-filtered": {
      "get": {
        "tags": ["Filter Rule Resource"],
        "summary": "Get list of filter rules and filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ruleType",
            "in": "query",
            "description": "Allowed values; DEST/SEND/ACCTID/PAYLOAD",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterAuthenRuleDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/get-filtered/containing-method": {
      "get": {
        "tags": ["Filter Group Resource"],
        "summary": "Get list of filter groups and filtered by keywords and methods.",
        "description": "",
        "operationId": "getFilteredByMethodContaining",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "method",
            "in": "query",
            "description": "The method used to filter FilterGroup entities. If this parameter is null, no filtering by method will be applied.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterGroupDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/get-filtered/not-containing-method": {
      "get": {
        "tags": ["Filter Group Resource"],
        "summary": "Get list of filter groups and filtered by keywords and not containing method.",
        "description": "",
        "operationId": "getFilteredByMethodNotContaining",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterGroupDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/{filter_group_id}": {
      "get": {
        "tags": ["Filter Group Resource"],
        "summary": "Get Filter Group by ID.",
        "description": "",
        "operationId": "getFilterGroupById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter_group_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Filter Group was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/create": {
      "post": {
        "tags": ["Filter Group Resource"],
        "summary": "Create Filter Group.",
        "description": "",
        "operationId": "createFilterGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filter Group has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/update": {
      "put": {
        "tags": ["Filter Group Resource"],
        "summary": "Update Filter Group.",
        "description": "",
        "operationId": "updateFilterGroup",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Filter Group has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Filter Group was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/validate-name": {
      "get": {
        "tags": ["Filter Group Resource"],
        "summary": "Validate the uniqueness of Filter Group Name.",
        "description": "",
        "operationId": "validateName_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter-group/get-filtered": {
      "get": {
        "tags": ["Filter Group Resource"],
        "summary": "Get list of filters and filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterGroupDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/get-domain-regex-filtered": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Get list of filter domain regex and filtered by keywords.",
        "description": "",
        "operationId": "getDomainRegex",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterDomainRegexDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/upload": {
      "post": {
        "tags": ["Filter Resource"],
        "summary": "Upload IANA Domain List.",
        "description": "",
        "operationId": "handleFileUpload",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "IANA Domain file has been processed successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/validate-regex": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Validate the basic regex format.",
        "description": "",
        "operationId": "validateRegex",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "regex",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/create": {
      "post": {
        "tags": ["Filter Resource"],
        "summary": "Create Filter.",
        "description": "",
        "operationId": "createFilter_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Filter has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/validate-name": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Validate the uniqueness of Filter Name.",
        "description": "",
        "operationId": "validateName_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/update": {
      "put": {
        "tags": ["Filter Resource"],
        "summary": "Update Filter.",
        "description": "",
        "operationId": "updateFilter_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Filter has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Filter was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/get-filtered": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Get list of filters and filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOFilterDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/{filter_id}": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Get Filter by ID.",
        "description": "",
        "operationId": "getFilterById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "The Filter was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/filter/form-field": {
      "get": {
        "tags": ["Filter Resource"],
        "summary": "Get list of system variables to populate filter form.",
        "description": "",
        "operationId": "getFilterForms",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "defType",
            "in": "query",
            "description": "Supported values; type/method/action/isglobal",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/update": {
      "put": {
        "tags": ["Http Interface Resource"],
        "summary": "Update HTTP Interface Profile.",
        "description": "",
        "operationId": "update_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HTTPProtocolDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The HTTP Interface Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "HTTP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/create": {
      "post": {
        "tags": ["Http Interface Resource"],
        "summary": "Create HTTP Interface Profile.",
        "description": "",
        "operationId": "create_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HTTPProtocolDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The HTTP Interface Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/validate-sysid-username": {
      "get": {
        "tags": ["Http Interface Resource"],
        "summary": "Validate uniqueness of HTTP Interface Profile SystemId and Username pair.",
        "description": "",
        "operationId": "validateSystemIdAndUsername",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "httpProfileId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/validate-name": {
      "get": {
        "tags": ["Http Interface Resource"],
        "summary": "Validate uniqueness of HTTP Interface Profile Name.",
        "description": "",
        "operationId": "validateName_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "httpProfileId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/delete/{id}": {
      "delete": {
        "tags": ["Http Interface Resource"],
        "summary": "Delete HTTP Interface Profile.",
        "description": "",
        "operationId": "deleteById_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The HTTP Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "HTTP Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/get-filtered": {
      "get": {
        "tags": ["Http Interface Resource"],
        "summary": "Get list of HTTP Interface Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOHTTPProtocolDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/{id}": {
      "get": {
        "tags": ["Http Interface Resource"],
        "summary": "Get HTTP Interface Profile by ID.",
        "description": "",
        "operationId": "getById_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "HTTP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/http-interface/form-field": {
      "get": {
        "tags": ["Http Interface Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_1",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/header-request/get-header": {
      "get": {
        "tags": ["Header Request Resource"],
        "summary": "Get attributes from request headers===",
        "description": "",
        "operationId": "getHeaders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HttpRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/update": {
      "put": {
        "tags": ["Map Interface Resource"],
        "summary": "Update MAP Interface Profile.",
        "description": "",
        "operationId": "update_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MAPProtocolProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The MAP Interface Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "MAP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/create": {
      "post": {
        "tags": ["Map Interface Resource"],
        "summary": "Create MAP Interface Profile.",
        "description": "",
        "operationId": "create_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MAPProtocolProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The MAP Interface Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/get-filtered-additional-info": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Get list of Additional MAP Interface Profiles filtered by keywords.(Not supported yet)",
        "description": "",
        "operationId": "getFilteredAdditionalMapInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "ss7mapProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOMAPInforDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/create-additional-info": {
      "post": {
        "tags": ["Map Interface Resource"],
        "summary": "Create additional MAP info.",
        "description": "",
        "operationId": "createAdditionalMapInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MAPInforDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Additional MAP Info has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/additional-info/{protocol_ss7map_id}": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Get additional MAP Info by ID.",
        "description": "",
        "operationId": "getAdditionalMapInfoById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "protocol_ss7map_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "The Protocol SS7MAP was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/update-additional-info": {
      "put": {
        "tags": ["Map Interface Resource"],
        "summary": "Update additional MAP info.",
        "description": "",
        "operationId": "updateAdditionalMapInfo",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MAPInforDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Additional MAP Info has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/delete-additional-info/{id}": {
      "delete": {
        "tags": ["Map Interface Resource"],
        "summary": "Delete additional MAP info.",
        "description": "",
        "operationId": "deleteAdditionalMapInfoById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Additional MAP Info has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Additional MAP Info was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/info/validate-info-gt-address": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Validate the uniqueness of protocol ss7 map address.",
        "description": "",
        "operationId": "validateInfoGtAddress",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "skipIds",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          }
        }
      }
    },
    "/map-interface/additional-info/validate-host-id": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Validate uniqueness of host ID.",
        "description": "",
        "operationId": "validateHostId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "protocolSs7mapProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "hostId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "protocolSs7mapId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/additional-info/validate-name": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Validate uniqueness of host name.",
        "description": "",
        "operationId": "validateHostName",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "protocolSs7mapId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/validate-name": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Validate the uniqueness of SMPP Interface Profile Name.",
        "description": "",
        "operationId": "validateName_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ss7map_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/delete/{id}": {
      "delete": {
        "tags": ["Map Interface Resource"],
        "summary": "Delete MAP Interface Profile.",
        "description": "",
        "operationId": "deleteById_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The MAP Interface Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "MAP Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/get-filtered": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Get list of MAP Interface Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOMAPProtocolProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/{ss7map_profile_id}": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Get MAP Interface Profile by ID.",
        "description": "",
        "operationId": "getById_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "ss7map_profile_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "MAP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/map-interface/additional-info/form-field": {
      "get": {
        "tags": ["Map Interface Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_2",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/misc/request-headers": {
      "get": {
        "tags": ["Miscellaneous Resource"],
        "operationId": "getAllRequestHeaders",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/next-retry-profile/update": {
      "put": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Update Next Retry Profile.",
        "description": "",
        "operationId": "update_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextRetryProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Next Retry Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Next Retry Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/next-retry-profile/create": {
      "post": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Create Next Retry Profile.",
        "description": "",
        "operationId": "create_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NextRetryProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Next Retry Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/next-retry-profile/delete/{id}": {
      "delete": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Delete Next Retry Profile by ID.",
        "description": "",
        "operationId": "deleteById_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Next Retry Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Next Retry Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/next-retry-profile/get-filtered": {
      "get": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Get list of Next Retry Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTONextRetryProfileDTO"
            }
          }
        }
      }
    },
    "/next-retry-profile/{id}": {
      "get": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Get Next Retry Profile by ID.",
        "description": "",
        "operationId": "getById_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Next Retry Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/next-retry-profile/form-field": {
      "get": {
        "tags": ["Next Retry Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_3",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/number-blacklist/update": {
      "put": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Update Global Access List/ Number Blacklist.",
        "description": "",
        "operationId": "update_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberBlacklistDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Number Blacklist has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Number Blacklist was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/create": {
      "post": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Create Global Access List/ Number Blacklist.",
        "description": "",
        "operationId": "create_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberBlacklistDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Number Blacklist has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/validate-addr-and-addr-id": {
      "get": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Validate the uniqueness of addr and addrId pair.",
        "description": "",
        "operationId": "validateAddrAndAddrId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "addr",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "addrId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "globalAccessListId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/delete/{id}": {
      "delete": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Delete Global Access List/ Number Blacklist.",
        "description": "",
        "operationId": "deleteById_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Number Blacklist has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Number Blacklist was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/get-filtered": {
      "get": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Get list of Global Access List/ Number Blacklist filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "addrId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTONumberBlacklistDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/{id}": {
      "get": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Get Global Access List/ Number Blacklist by ID.",
        "description": "",
        "operationId": "getById_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Number Blacklist was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/number-blacklist/form-field": {
      "get": {
        "tags": ["Number Blacklist Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_4",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/update": {
      "put": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Update Period Map Profile.",
        "description": "",
        "operationId": "update_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodMapProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Period Map Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Period Map Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/create": {
      "post": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Create Period Map Profile.",
        "description": "",
        "operationId": "create_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeriodMapProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Period Map Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/delete/{id}": {
      "delete": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Delete Period Map Profile by ID.",
        "description": "",
        "operationId": "deleteById_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Period Map Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Period Map Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/get-filtered": {
      "get": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Get list of Period Map Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOPeriodMapProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/{id}": {
      "get": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Get Period Map Profiles by ID.",
        "description": "",
        "operationId": "getById_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Period Map Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/period-map-profile/form-field": {
      "get": {
        "tags": ["Period Map Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_5",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/update": {
      "put": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Update Traffic Rate Profile.",
        "description": "",
        "operationId": "update_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrafficControlProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Rate Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Traffic Rate Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/create": {
      "post": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Create Traffic Rate Profile.",
        "description": "",
        "operationId": "create_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TrafficControlProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/validate-description": {
      "get": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Validate the uniqueness of Traffic Rate Profile description.",
        "description": "",
        "operationId": "validateDescription",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trafficProfileId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/delete/{trafficProfileId}": {
      "delete": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Delete Traffic Rate Profile by ID.",
        "description": "",
        "operationId": "deleteById_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "trafficProfileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Traffic Rate Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Traffic Rate Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/get-filtered": {
      "get": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Get list of Traffic Rate Profile filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOTrafficControlProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/{trafficProfileId}": {
      "get": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Get Traffic Rate Profile by ID.",
        "description": "",
        "operationId": "getById_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "trafficProfileId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "The Traffic Rate Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/traffic-rate/form-field": {
      "get": {
        "tags": ["Traffic Rate Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_6",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/update": {
      "put": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Update Retry By Error Profile.",
        "description": "",
        "operationId": "update_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErrorProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry By Error Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Retry By Error Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/create": {
      "post": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Create Retry By Error Profile.",
        "description": "",
        "operationId": "create_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ErrorProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry By Error Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/validate-name": {
      "get": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Validate the uniqueness of Retry By Error Profile Name.",
        "description": "",
        "operationId": "validateName_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/delete/{id}": {
      "delete": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Delete Retry By Error Profile by ID.",
        "description": "",
        "operationId": "deleteById_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry By Error Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Retry By Error Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/get-filtered": {
      "get": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Get list of Retry By Error Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOErrorProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/{id}": {
      "get": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Get Retry By Error Profile by ID.",
        "description": "",
        "operationId": "getById_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Retry By Error Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-by-error-profile/form-field": {
      "get": {
        "tags": ["Retry By Error Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_7",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/update": {
      "put": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Update Retry Level Profile.",
        "description": "",
        "operationId": "update_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetryProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry Level Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Retry Level Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/create": {
      "post": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Create Retry Level Profile.",
        "description": "",
        "operationId": "create_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RetryProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry Level Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/validate-name": {
      "get": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Validate the uniqueness of Retry Level Profile Name.",
        "description": "",
        "operationId": "validateName_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/delete/{id}": {
      "delete": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Delete Retry Level Profile by ID.",
        "description": "",
        "operationId": "deleteById_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Retry Level Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Retry Level Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/get-filtered": {
      "get": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Get list of Retry Level Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTORetryProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/{id}": {
      "get": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Get Retry Level Profile by ID.",
        "description": "",
        "operationId": "getById_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Retry Level Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/retry-level-profile/form-field": {
      "get": {
        "tags": ["Retry Level Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_8",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/update": {
      "put": {
        "tags": ["Route Profile Resource"],
        "summary": "Update Route Criteria Profile.",
        "description": "",
        "operationId": "update_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Route Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/create": {
      "post": {
        "tags": ["Route Profile Resource"],
        "summary": "Create Route Criteria Profile.",
        "description": "",
        "operationId": "create_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/validate-name": {
      "get": {
        "tags": ["Route Profile Resource"],
        "summary": "Validate the uniqueness of Route Criteria Profile Name.",
        "description": "",
        "operationId": "validateName_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "route_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/delete/{id}": {
      "delete": {
        "tags": ["Route Profile Resource"],
        "summary": "Delete Route Criteria Profile by ID.",
        "description": "",
        "operationId": "deleteById_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Route Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/get-filtered": {
      "get": {
        "tags": ["Route Profile Resource"],
        "summary": "Get list of Route Criteria Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTORouteProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/{id}": {
      "get": {
        "tags": ["Route Profile Resource"],
        "summary": "Get Route Criteria Profile by ID.",
        "description": "",
        "operationId": "getById_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Route Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-profile/form-field": {
      "get": {
        "tags": ["Route Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_9",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/update": {
      "put": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Update Route Group Profile.",
        "description": "",
        "operationId": "update_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteDestinationGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Destination Group has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Route Destination Group Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/create": {
      "post": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Create Route Group Profile.",
        "description": "",
        "operationId": "create_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RouteDestinationGroupDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Destination Group Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/validate-name": {
      "get": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Validate the uniqueness of Route Group Profile Name.",
        "description": "",
        "operationId": "validateName_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "route_group_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/delete/{id}": {
      "delete": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Delete Route Group Profile by ID.",
        "description": "",
        "operationId": "deleteById_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Route Destination Group Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Route Destination Group Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/get-filtered": {
      "get": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Get list of Route Destination Group filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTORouteDestinationGroupDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/{id}": {
      "get": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Get Route Destination Group by ID.",
        "description": "",
        "operationId": "getById_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Route Destination Group Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/route-destination-group/form-field": {
      "get": {
        "tags": ["Route Destination Group Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_10",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/update": {
      "put": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Update SMPP Interface Profile.",
        "description": "",
        "operationId": "update_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMPPProtocolDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The SMPP Interface Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "SMPP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/create": {
      "post": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Create SMPP Interface Profile.",
        "description": "",
        "operationId": "create_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SMPPProtocolDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The SMPP Interface Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/validate-ip-authen-id": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Validate the uniqueness of ip_authen_id:ip addresses in client_ip_authen table when SMPP Interface Profile's Endpoint Type is SERVER.",
        "description": "",
        "operationId": "validateIpAuthenId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "ipAuthenId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ip",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/validate-ip-port": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Validate the uniqueness of IP:PORT addresses when SMPP Interface Profile's Endpoint Type is SERVER.",
        "description": "",
        "operationId": "validateIpAndPort",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "endPointType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/get-protocols": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get list of Protocols",
        "description": "",
        "operationId": "getAllProtocols",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved types of Protocols.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/ip-list": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get list of Client/Server IP Addresses based on SMPP Interface Profile's Endpoint Type.",
        "description": "",
        "operationId": "getIpPortList",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeAssignedServer",
            "in": "query",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "endpointType",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/validate-account-linkage": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get list of Accounts associated with the SMPP Interface Profile.",
        "description": "",
        "operationId": "getAccountsListAssociatedWithProtocol",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "smppProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/validate-name": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Validate the uniqueness of SMPP Interface Profile Name.",
        "description": "",
        "operationId": "validateName_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "smpp_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/delete/{id}": {
      "delete": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Delete SMPP Interface Profile by ID.",
        "description": "",
        "operationId": "deleteById_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The SMPP Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "SMPP Profile not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/get-filtered": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get list of SMPP Interface Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_16",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOSMPPProtocolDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/{id}": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get SMPP Interface Profile by ID.",
        "description": "",
        "operationId": "getById_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "SMPP Interface Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/smpp-interface/form-field": {
      "get": {
        "tags": ["Smpp Interface Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_11",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/sms-tracing/paginated": {
      "get": {
        "tags": ["SMS Tracing"],
        "operationId": "getSmsTracingListByPagination",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmsTracingDTO"
              }
            }
          }
        }
      }
    },
    "/sms-tracing": {
      "get": {
        "tags": ["SMS Tracing"],
        "operationId": "getSmsTracingList",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SmsTracingDTO"
              }
            }
          }
        }
      }
    },
    "/spamfilter-profile/save": {
      "post": {
        "tags": ["Spamfilter Profile Resource"],
        "summary": "Create/Update Spam Filter Profile.",
        "description": "",
        "operationId": "createSpamFilterProfile",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SpamfilterProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Spam Filter Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/spamfilter-profile/{spamfilter_profile_id}": {
      "get": {
        "tags": ["Spamfilter Profile Resource"],
        "summary": "Get SpamFilter Profile by ID.",
        "description": "",
        "operationId": "getSpamfilterProfileById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "spamfilter_profile_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "The SpamFilter Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/spamfilter-profile/validate-name": {
      "get": {
        "tags": ["Spamfilter Profile Resource"],
        "summary": "Validate the uniqueness of Spam Filter Profile Name.",
        "description": "",
        "operationId": "validateName_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/spamfilter-profile/get-filtered": {
      "get": {
        "tags": ["Spamfilter Profile Resource"],
        "summary": "Get list of spamfilter profiles and filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_17",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOSpamfilterProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/system-variable/update": {
      "put": {
        "tags": ["System Variable Resource"],
        "summary": "Update System Variables.",
        "description": "",
        "operationId": "update_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemVariablesDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The System Variable has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "System Variable was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/system-variable/{systemId}": {
      "get": {
        "tags": ["System Variable Resource"],
        "summary": "Get System Variable by SystemID.",
        "description": "",
        "operationId": "getBySystemId",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "systemId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "System Variable was not found with the given SystemID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/system-variable/get-filtered": {
      "get": {
        "tags": ["System Variable Resource"],
        "summary": "Get list of System Variables filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_18",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOSystemVariablesDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/update": {
      "put": {
        "tags": ["Translation Profile Resource"],
        "summary": "Update Translation Profile.",
        "description": "",
        "operationId": "update_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Translation Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Translation Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/create": {
      "post": {
        "tags": ["Translation Profile Resource"],
        "summary": "Create Translation Profile.",
        "description": "",
        "operationId": "create_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Translation Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/translation-pattern/{transPatternId}": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Get Translation Pattern by ID.",
        "description": "",
        "operationId": "getTranslationPatternById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "transPatternId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "translationProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedAddrId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "404": {
            "description": "The Translation Pattern was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/get-filtered-translation-pattern": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Get list of Translation Patterns filtered by keywords.",
        "description": "",
        "operationId": "getFilteredTranslationPatterns",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "transProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedAddrProfileId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOTranslationPatternDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/create-translation-pattern": {
      "post": {
        "tags": ["Translation Profile Resource"],
        "summary": "Create Translation Pattern.",
        "description": "",
        "operationId": "createTranslationPattern",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "translationProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedAddrId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationPatternDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Translation Pattern has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/delete-translation-pattern/{idOfTransPattern}": {
      "delete": {
        "tags": ["Translation Profile Resource"],
        "summary": "Delete Translation Pattern.",
        "description": "",
        "operationId": "deleteTranslationPatternById",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "idOfTransPattern",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "translationProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedAddrId",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The Translation Pattern has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Translation Pattern was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/update-translation-pattern": {
      "put": {
        "tags": ["Translation Profile Resource"],
        "summary": "Update Translation Pattern.",
        "description": "",
        "operationId": "updateTranslationPattern",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "translationProfileId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "selectedAddrId",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TranslationPatternDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Translation Pattern has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Translation Pattern was not found with the given ID!",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/simulation": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Simulate translation pattern.",
        "description": "",
        "operationId": "simulation",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "match_pattern",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translation_action",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "translation_value",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "input_address",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/TranslationSimulationDTO"
            }
          }
        }
      }
    },
    "/translation-profile/validate-name": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Validate the uniqueness of Translation Profile name.",
        "description": "",
        "operationId": "validateName_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "trans_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/delete/{id}": {
      "delete": {
        "tags": ["Translation Profile Resource"],
        "summary": "Delete Translation Profile.",
        "description": "",
        "operationId": "deleteById_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Translation Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "The given Translation Profile ID does not exists.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/get-filtered": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Get list of Translation Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_19",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOTranslationProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/{id}": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Get Translation Profile by ID.",
        "description": "",
        "operationId": "getById_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Translation Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/translation-profile/form-field": {
      "get": {
        "tags": ["Translation Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_12",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/update": {
      "put": {
        "tags": ["Validity Profile Resource"],
        "summary": "Update Account Validity Value.",
        "description": "",
        "operationId": "update_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidityProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Validity Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Validity Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/create": {
      "post": {
        "tags": ["Validity Profile Resource"],
        "summary": "Create Account Validity Value.",
        "description": "",
        "operationId": "create_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ValidityProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Validity Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/validate-name": {
      "get": {
        "tags": ["Validity Profile Resource"],
        "summary": "Validate the uniqueness of Account Validity Value name.",
        "description": "",
        "operationId": "validateName_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accountValidityValueId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/delete/{id}": {
      "delete": {
        "tags": ["Validity Profile Resource"],
        "summary": "Delete Account Validity Value.",
        "description": "",
        "operationId": "deleteById_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Validity Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Validity Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/get-filtered": {
      "get": {
        "tags": ["Validity Profile Resource"],
        "summary": "Get list of Account Validity Values filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_20",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOValidityProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/{id}": {
      "get": {
        "tags": ["Validity Profile Resource"],
        "summary": "Get Account Validity Value by ID.",
        "description": "",
        "operationId": "getById_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Account Validity Value was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/validity-profile/form-field": {
      "get": {
        "tags": ["Validity Profile Resource"],
        "summary": "Get list of system variables to populate form.",
        "description": "",
        "operationId": "populateInputFormDataAndValues_13",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/update": {
      "put": {
        "tags": ["Window Profile Resource"],
        "summary": "Update Windows Profile.",
        "description": "",
        "operationId": "update_15",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Windows Time Profile has been updated successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Windows Time Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/create": {
      "post": {
        "tags": ["Window Profile Resource"],
        "summary": "Create Windows Profile.",
        "description": "",
        "operationId": "create_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WindowProfileDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Windows Profile has been created successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/validate-name": {
      "get": {
        "tags": ["Window Profile Resource"],
        "summary": "Validate the uniqueness of Windows Profile name.",
        "description": "",
        "operationId": "validateName_16",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "windows_profile_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Validation complete. Refer to the ResponseDTO model for validation result. Code 0 = success, Code 103 = failed",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/delete/{id}": {
      "delete": {
        "tags": ["Window Profile Resource"],
        "summary": "Delete Windows Profile.",
        "description": "",
        "operationId": "deleteById_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "The Windows Profile has been deleted successfully.",
            "schema": {
              "$ref": "#/definitions/ResponseDTO"
            }
          },
          "404": {
            "description": "Windows Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/get-filtered": {
      "get": {
        "tags": ["Window Profile Resource"],
        "summary": "Get list of Windows Profiles filtered by keywords.",
        "description": "",
        "operationId": "getFiltered_21",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "Will default to 1 if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Will default to 'totalRecords' if none/lesser than equals to 0.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/ResponseDTOPaginatedResponseDTOWindowProfileDTO"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    },
    "/window-profile/{id}": {
      "get": {
        "tags": ["Window Profile Resource"],
        "summary": "Get Windows Profile by ID.",
        "description": "",
        "operationId": "getById_14",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "referenceId",
            "in": "header",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "404": {
            "description": "Windows Profile was not found with the given ID.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ResponseDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "type": "object",
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null."
        }
      },
      "description": "A generic response for API."
    },
    "ErrorMessage": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "developerMessage": {
          "type": "string"
        }
      }
    },
    "AccountDTO": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "integer",
          "format": "int32"
        },
        "accountName": {
          "type": "string"
        },
        "accountDescription": {
          "type": "string"
        },
        "accountInboundStatus": {
          "type": "string"
        },
        "accountInboundStatusDesc": {
          "type": "string"
        },
        "accountOutboundStatus": {
          "type": "string"
        },
        "accountOutboundStatusDesc": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "accountValidityType": {
          "type": "string"
        },
        "accountValidityTypeDesc": {
          "type": "string"
        },
        "accountValidityValue": {
          "type": "string"
        },
        "accountValidityValueDesc": {
          "type": "string"
        },
        "accountValidityOverwrite": {
          "type": "integer",
          "format": "int32"
        },
        "accountValidityPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "accountPriorityType": {
          "type": "string"
        },
        "accountPriorityTypeDesc": {
          "type": "string"
        },
        "accountPriority": {
          "type": "integer",
          "format": "int32"
        },
        "accountPriorityName": {
          "type": "string"
        },
        "accountPriorityOverwrite": {
          "type": "integer",
          "format": "int32"
        },
        "accountThrottle": {
          "type": "integer",
          "format": "int32"
        },
        "accountThrottleDesc": {
          "type": "string"
        },
        "accountThroughput": {
          "type": "integer",
          "format": "int32"
        },
        "accountThroughputDesc": {
          "type": "string"
        },
        "accountFda": {
          "type": "string"
        },
        "accountNextRetryId": {
          "type": "integer",
          "format": "int32"
        },
        "accountNextRetryDesc": {
          "type": "string"
        },
        "accountInboundTranslateId": {
          "type": "integer",
          "format": "int32"
        },
        "accountInboundTranslateDesc": {
          "type": "string"
        },
        "accountOutboundTranslateId": {
          "type": "integer",
          "format": "int32"
        },
        "accountOutboundTranslateDesc": {
          "type": "string"
        },
        "accountWindowTimeId": {
          "type": "integer",
          "format": "int32"
        },
        "accountWindowTimeDesc": {
          "type": "string"
        },
        "accountMessageMode": {
          "type": "string"
        },
        "accountMessageModeDesc": {
          "type": "string"
        },
        "accountChargingId": {
          "type": "integer",
          "format": "int32"
        },
        "accountRouteId": {
          "type": "integer",
          "format": "int32"
        },
        "accountRouteDesc": {
          "type": "string"
        },
        "accountAuthorId": {
          "type": "integer",
          "format": "int32"
        },
        "accountAuthorDesc": {
          "type": "string"
        },
        "accountProtoId": {
          "type": "string"
        },
        "accountProtocolId": {
          "type": "integer",
          "format": "int32"
        },
        "accountProtocolDesc": {
          "type": "string"
        },
        "accountEndPointType": {
          "type": "string"
        },
        "accountEndPointTypeDesc": {
          "type": "string"
        },
        "accountIsAllowLongMessage": {
          "type": "boolean"
        },
        "accountIsAllowLongMessageDesc": {
          "type": "string"
        },
        "accountEnableAntiSpam": {
          "type": "integer",
          "format": "int32"
        },
        "accountAntiSpoofId": {
          "type": "integer",
          "format": "int32"
        },
        "accountAntiSpoofDesc": {
          "type": "string"
        },
        "accountEnableHomeRoute": {
          "type": "integer",
          "format": "int32"
        },
        "accountModuleInstanceId": {
          "type": "string"
        },
        "accountContentFilterId": {
          "type": "integer",
          "format": "int32"
        },
        "accountContentFilterDesc": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "type": "object"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "PaginatedResponseDTOAccountDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/AccountDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOAccountDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOAccountDTO"
        }
      },
      "description": "A generic response for API."
    },
    "AntiSpoofDefineDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "fieldName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "display": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AntiSpoofDefineDTOListResponseDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "type": "array",
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "items": {
            "$ref": "#/definitions/AntiSpoofDefineDTO"
          }
        }
      }
    },
    "AntiSpoofDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "addrPattern": {
          "type": "string"
        },
        "addrType": {
          "type": "string"
        },
        "matchAddr": {
          "type": "string"
        },
        "matchThen": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "antiSpoofProfile": {
          "$ref": "#/definitions/AntiSpoofProfileDTO"
        }
      }
    },
    "AntiSpoofPaginatedResponseDTOResponseDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOAntiSpoofProfileDTO"
        }
      }
    },
    "AntiSpoofProfileDTO": {
      "type": "object",
      "properties": {
        "antiSpoofId": {
          "type": "integer",
          "format": "int32"
        },
        "localMcc": {
          "type": "string"
        },
        "noMatchThenLocal": {
          "type": "string"
        },
        "noMatchThenInt": {
          "type": "string"
        },
        "spoofLenCheckLocal": {
          "type": "integer",
          "format": "int32"
        },
        "spoofLenCheckInt": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "antiSpoofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AntiSpoofDTO"
          }
        },
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOAntiSpoofProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/AntiSpoofProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "AuthenticationDetailsDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "addressId": {
          "type": "string"
        },
        "addressPattern": {
          "type": "string"
        },
        "action": {
          "type": "string"
        }
      }
    },
    "AuthenticationProfileDTO": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "integer",
          "format": "int32"
        },
        "noMatchAction": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "numberOfRecords": {
          "type": "integer",
          "format": "int32"
        },
        "sourceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthenticationDetailsDTO"
          }
        },
        "destinationList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthenticationDetailsDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOAuthenticationProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/AuthenticationProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOAuthenticationProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOAuthenticationProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "DefAfDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "defType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "data": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DefAfDTOListResponseDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "type": "array",
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "items": {
            "$ref": "#/definitions/DefAfDTO"
          }
        }
      }
    },
    "ErrorMappingDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "tag": {
          "type": "string"
        },
        "internalErrorCode": {
          "type": "integer",
          "format": "int32"
        },
        "smppErrorCode": {
          "type": "integer",
          "format": "int32"
        },
        "ss7mapErrorCode": {
          "type": "integer",
          "format": "int32"
        },
        "httpErrorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorType": {
          "type": "integer",
          "format": "int32"
        },
        "pendQueue": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOErrorMappingDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/ErrorMappingDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOErrorMappingDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOErrorMappingDTO"
        }
      },
      "description": "A generic response for API."
    },
    "FilterAuthenDTO": {
      "type": "object",
      "properties": {
        "authenId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "isGlobal": {
          "type": "integer",
          "format": "int32"
        },
        "defAction": {
          "type": "string"
        },
        "filterAuthenRuleProfileActionDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterAuthenRuleProfileActionDTO"
          }
        },
        "spamfilterProfileDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpamfilterProfileDTO"
          }
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "FilterAuthenRuleDTO": {
      "type": "object",
      "properties": {
        "ruleId": {
          "type": "integer",
          "format": "int32"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleType": {
          "type": "string"
        },
        "caseSensitive": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "matchedType": {
          "type": "integer",
          "format": "int32"
        },
        "filterAuthenRuleDetailDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterAuthenRuleDetailDTO"
          }
        },
        "filterAuthenDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterAuthenDTO"
          }
        },
        "filterAuthenRuleProfileActionDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterAuthenRuleProfileActionDTO"
          }
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "FilterAuthenRuleDetailDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "ruleId": {
          "type": "integer",
          "format": "int32"
        },
        "ruleValue": {
          "type": "string"
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "FilterAuthenRuleProfileActionDTO": {
      "type": "object",
      "properties": {
        "authenId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "actionMatched": {
          "type": "string"
        },
        "actionNotmatched": {
          "type": "string"
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        },
        "filterAuthenRuleProfileDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterAuthenRuleProfileDTO"
          }
        }
      }
    },
    "FilterAuthenRuleProfileDTO": {
      "type": "object",
      "properties": {
        "authenId": {
          "type": "integer",
          "format": "int32"
        },
        "ruleId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "subOrder": {
          "type": "integer",
          "format": "int32"
        },
        "filterAuthenRuleDTO": {
          "$ref": "#/definitions/FilterAuthenRuleDTO"
        }
      }
    },
    "FilterDTO": {
      "type": "object",
      "properties": {
        "filterId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "defFilterGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "flagIdOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "cooldownOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "weightOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "tag": {
          "type": "string"
        },
        "filterGroupListCount": {
          "type": "integer",
          "format": "int32"
        },
        "filterGroupDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterGroupDTO"
          }
        },
        "filterRegexListCount": {
          "type": "integer",
          "format": "int32"
        },
        "filterRegexDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterRegexDTO"
          }
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "FilterGroupDTO": {
      "type": "object",
      "properties": {
        "filterGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "method": {
          "type": "string"
        },
        "flagIdOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "cooldownOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "weightOnMatch": {
          "type": "integer",
          "format": "int32"
        },
        "filterCount": {
          "type": "integer",
          "format": "int32"
        },
        "filterDtoList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterDTO"
          }
        },
        "spamFilterProfileCount": {
          "type": "integer",
          "format": "int32"
        },
        "spamfilterProfileDTO": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpamfilterProfileDTO"
          }
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "FilterRegexDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "filterId": {
          "type": "integer",
          "format": "int32"
        },
        "regex": {
          "type": "string"
        },
        "logicalCombi": {
          "type": "string"
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOFilterAuthenDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/FilterAuthenDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOFilterAuthenDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOFilterAuthenDTO"
        }
      },
      "description": "A generic response for API."
    },
    "SpamfilterProfileDTO": {
      "type": "object",
      "properties": {
        "sfId": {
          "type": "integer",
          "format": "int32"
        },
        "sfName": {
          "type": "string"
        },
        "authenId": {
          "type": "integer",
          "format": "int32"
        },
        "filterAuthenDTO": {
          "$ref": "#/definitions/FilterAuthenDTO"
        },
        "filterGroupDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterGroupDTO"
          }
        },
        "accountListCount": {
          "type": "integer",
          "format": "int32"
        },
        "accountDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountDTO"
          }
        },
        "createUser": {
          "type": "string"
        },
        "updateUser": {
          "type": "string"
        }
      }
    },
    "ResponseDTOFilterAuthenDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/FilterAuthenDTO"
        }
      },
      "description": "A generic response for API."
    },
    "PaginatedResponseDTOFilterAuthenRuleDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/FilterAuthenRuleDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOFilterAuthenRuleDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOFilterAuthenRuleDTO"
        }
      },
      "description": "A generic response for API."
    },
    "PaginatedResponseDTOFilterGroupDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/FilterGroupDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOFilterGroupDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOFilterGroupDTO"
        }
      },
      "description": "A generic response for API."
    },
    "FilterDomainRegexDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        },
        "domainRegex": {
          "type": "string"
        },
        "createUser": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOFilterDomainRegexDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/FilterDomainRegexDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOFilterDomainRegexDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOFilterDomainRegexDTO"
        }
      },
      "description": "A generic response for API."
    },
    "PaginatedResponseDTOFilterDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/FilterDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOFilterDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOFilterDTO"
        }
      },
      "description": "A generic response for API."
    },
    "HTTPProtocolDTO": {
      "type": "object",
      "properties": {
        "httpProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "httpProfileEndPointType": {
          "type": "string"
        },
        "httpProfileEndPointTypeDesc": {
          "type": "string"
        },
        "httpProfileSupportedService": {
          "type": "string"
        },
        "httpProfileSupportedServiceDesc": {
          "type": "string"
        },
        "httpProfileSysId": {
          "type": "string"
        },
        "httpProfileUsername": {
          "type": "string"
        },
        "httpProfilePassword": {
          "type": "string"
        },
        "httpProfileDeliverUrl": {
          "type": "string"
        },
        "httpProfileDrUrl": {
          "type": "string"
        },
        "httpProfileRespondTimer": {
          "type": "integer",
          "format": "int32"
        },
        "httpProfileUseTransId": {
          "type": "integer",
          "format": "int32"
        },
        "httpProfileWindowEnable": {
          "type": "integer",
          "format": "int32"
        },
        "httpProfileName": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOHTTPProtocolDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/HTTPProtocolDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOHTTPProtocolDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOHTTPProtocolDTO"
        }
      },
      "description": "A generic response for API."
    },
    "Header": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "elements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HeaderElement"
          }
        }
      }
    },
    "HeaderElement": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "parameterCount": {
          "type": "integer",
          "format": "int32"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValuePair"
          }
        }
      }
    },
    "HttpParams": {
      "type": "object"
    },
    "HttpRequest": {
      "type": "object",
      "properties": {
        "requestLine": {
          "$ref": "#/definitions/RequestLine"
        },
        "params": {
          "$ref": "#/definitions/HttpParams"
        },
        "protocolVersion": {
          "$ref": "#/definitions/ProtocolVersion"
        },
        "allHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Header"
          }
        }
      }
    },
    "NameValuePair": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ProtocolVersion": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string"
        },
        "major": {
          "type": "integer",
          "format": "int32"
        },
        "minor": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RequestLine": {
      "type": "object",
      "properties": {
        "method": {
          "type": "string"
        },
        "protocolVersion": {
          "$ref": "#/definitions/ProtocolVersion"
        },
        "uri": {
          "type": "string"
        }
      }
    },
    "MAPInforDetailsDTO": {
      "type": "object",
      "properties": {
        "ss7mapInforId": {
          "type": "integer",
          "format": "int32"
        },
        "gt": {
          "type": "string"
        },
        "routeInd": {
          "type": "integer",
          "format": "int32"
        },
        "routeIndDesc": {
          "type": "string"
        },
        "gtInd": {
          "type": "integer",
          "format": "int32"
        },
        "gtIndDesc": {
          "type": "string"
        },
        "ssn": {
          "type": "integer",
          "format": "int32"
        },
        "ssnDesc": {
          "type": "string"
        },
        "pc": {
          "type": "integer",
          "format": "int32"
        },
        "nai": {
          "type": "integer",
          "format": "int32"
        },
        "naiDesc": {
          "type": "string"
        },
        "tt": {
          "type": "integer",
          "format": "int32"
        },
        "np": {
          "type": "integer",
          "format": "int32"
        },
        "npDesc": {
          "type": "string"
        },
        "encoding": {
          "type": "integer",
          "format": "int32"
        },
        "encodingDesc": {
          "type": "string"
        }
      }
    },
    "MAPProtocolProfileDTO": {
      "type": "object",
      "properties": {
        "mapProtocolProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "mapProtocolProfileName": {
          "type": "string"
        },
        "mapProtocolProfileDescription": {
          "type": "string"
        },
        "mapProtocolProfileNumberOfConfigurations": {
          "type": "integer",
          "format": "int32"
        },
        "virtualGtInfors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MAPInforDetailsDTO"
          }
        }
      }
    },
    "MAPInforDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "ss7mapProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "localGtInforId": {
          "type": "integer",
          "format": "int32"
        },
        "localGtInfor": {
          "$ref": "#/definitions/MAPInforDetailsDTO"
        },
        "mscAddrInforId": {
          "type": "integer",
          "format": "int32"
        },
        "mscAddrInfor": {
          "$ref": "#/definitions/MAPInforDetailsDTO"
        },
        "hlrAddrInforId": {
          "type": "integer",
          "format": "int32"
        },
        "hlrAddrInfor": {
          "$ref": "#/definitions/MAPInforDetailsDTO"
        },
        "smscAddrInforId": {
          "type": "integer",
          "format": "int32"
        },
        "smscAddrInfor": {
          "$ref": "#/definitions/MAPInforDetailsDTO"
        },
        "hostInstanceId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOMAPInforDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/MAPInforDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOMAPInforDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOMAPInforDTO"
        }
      },
      "description": "A generic response for API."
    },
    "PaginatedResponseDTOMAPProtocolProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/MAPProtocolProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOMAPProtocolProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOMAPProtocolProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "NextRetryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "nextRetryId": {
          "type": "integer",
          "format": "int32"
        },
        "modeId": {
          "type": "integer",
          "format": "int32"
        },
        "modeName": {
          "type": "string"
        },
        "msgPriority": {
          "type": "integer",
          "format": "int32"
        },
        "msgPriorityName": {
          "type": "string"
        },
        "periodMapProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "periodMapProfileDesc": {
          "type": "string"
        },
        "errorProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "errorProfileName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "NextRetryProfileDTO": {
      "type": "object",
      "properties": {
        "nextRetryId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "numberOfConfigurations": {
          "type": "integer",
          "format": "int32"
        },
        "nextRetryDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NextRetryDTO"
          }
        }
      }
    },
    "PaginatedResponseDTONextRetryProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/NextRetryProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTONextRetryProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTONextRetryProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "NumberBlacklistDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "addrId": {
          "type": "string"
        },
        "addr": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTONumberBlacklistDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/NumberBlacklistDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTONumberBlacklistDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTONumberBlacklistDTO"
        }
      },
      "description": "A generic response for API."
    },
    "PeriodMapDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "periodMapProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "periodTypeId": {
          "type": "integer",
          "format": "int32"
        },
        "periodTypeName": {
          "type": "string"
        },
        "periodTypeDescription": {
          "type": "string"
        },
        "periodMapDescription": {
          "type": "string"
        },
        "periodId": {
          "type": "integer",
          "format": "int32"
        },
        "periodStartDate": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "repeatEndDate": {
          "type": "string"
        },
        "weekday": {
          "type": "string"
        },
        "monthDay": {
          "type": "string"
        },
        "yearDate": {
          "type": "string"
        },
        "periodProfileDescription": {
          "type": "string"
        },
        "unlimited": {
          "type": "boolean"
        },
        "allTime": {
          "type": "boolean"
        }
      }
    },
    "PeriodMapProfileDTO": {
      "type": "object",
      "properties": {
        "periodMapProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "numberOfPeriodProfile": {
          "type": "integer",
          "format": "int32"
        },
        "periodMapDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PeriodMapDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOPeriodMapProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/PeriodMapProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOPeriodMapProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOPeriodMapProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "TrafficControlDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "trafficProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "opType": {
          "type": "string"
        },
        "opTypeDescription": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "maxCount": {
          "type": "integer",
          "format": "int32"
        },
        "trafficControlName": {
          "type": "string"
        },
        "trafficControlDescription": {
          "type": "string"
        },
        "throttlingPerMode": {
          "type": "string"
        }
      }
    },
    "TrafficControlProfileDTO": {
      "type": "object",
      "properties": {
        "trafficProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "trafficControlProfileDescription": {
          "type": "string"
        },
        "numberOfConfigurations": {
          "type": "integer",
          "format": "int32"
        },
        "trafficControlDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrafficControlDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOTrafficControlProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/TrafficControlProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOTrafficControlProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOTrafficControlProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "ErrorListDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "errorProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "retryProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "retryProfileName": {
          "type": "string"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorCodeTag": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ErrorProfileDTO": {
      "type": "object",
      "properties": {
        "errorProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "numberOfErrorCodes": {
          "type": "integer",
          "format": "int32"
        },
        "errorListDTO": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorListDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOErrorProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/ErrorProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOErrorProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOErrorProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "RetryDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "level": {
          "type": "integer",
          "format": "int32"
        },
        "maxCounter": {
          "type": "integer",
          "format": "int32"
        },
        "retryInterval": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RetryProfileDTO": {
      "type": "object",
      "properties": {
        "retryProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "profileName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "retryProfileActionId": {
          "type": "string"
        },
        "retryProfileActionName": {
          "type": "string"
        },
        "retryProfileActionDescription": {
          "type": "string"
        },
        "retryList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetryDTO"
          }
        }
      }
    },
    "PaginatedResponseDTORetryProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/RetryProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTORetryProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTORetryProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "RouteCriteriaDTO": {
      "type": "object",
      "properties": {
        "routeCriteriaId": {
          "type": "integer",
          "format": "int32"
        },
        "addrId": {
          "type": "string"
        },
        "addrPattern": {
          "type": "string"
        },
        "ton": {
          "type": "integer",
          "format": "int32"
        },
        "tonName": {
          "type": "string"
        },
        "npi": {
          "type": "integer",
          "format": "int32"
        },
        "npiName": {
          "type": "string"
        },
        "routeCriteriaDescription": {
          "type": "string"
        }
      }
    },
    "RouteProfileCriteriaDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "routeProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "routeCriteriaDTO": {
          "$ref": "#/definitions/RouteCriteriaDTO"
        },
        "routeCriteriaTypeId": {
          "type": "string"
        },
        "routeCriteriaTypeName": {
          "type": "string"
        },
        "routeGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "routeGroupName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "RouteProfileDTO": {
      "type": "object",
      "properties": {
        "routeProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "routeMethod": {
          "type": "string"
        },
        "routeMethodDescription": {
          "type": "string"
        },
        "routeGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "routeGroupName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "routeProfileDescription": {
          "type": "string"
        },
        "numberOfRouteProfileCriteria": {
          "type": "integer",
          "format": "int32"
        },
        "routeProfileCriteriaDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteProfileCriteriaDTO"
          }
        }
      }
    },
    "PaginatedResponseDTORouteProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/RouteProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTORouteProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTORouteProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "RouteDestinationGroupDTO": {
      "type": "object",
      "properties": {
        "routeGroupProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "routeGroupProfileRouteType": {
          "type": "string"
        },
        "routeGroupProfileRouteTypeName": {
          "type": "string"
        },
        "routeGroupProfileProtoId": {
          "type": "string"
        },
        "routeGroupSmLenType": {
          "type": "string"
        },
        "routeGroupProfileName": {
          "type": "string"
        },
        "routeGroupProfileDescription": {
          "type": "string"
        },
        "routeGroupDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RouteGroupDTO"
          }
        }
      }
    },
    "RouteGroupDTO": {
      "type": "object",
      "properties": {
        "routeGroupId": {
          "type": "integer",
          "format": "int32"
        },
        "routeGroupAccountId": {
          "type": "integer",
          "format": "int32"
        },
        "accountProfileName": {
          "type": "string"
        },
        "accountProtoId": {
          "type": "string"
        },
        "routeGroupRouteTypeValue": {
          "type": "integer",
          "format": "int32"
        },
        "routeGroupProfileRouteType": {
          "type": "string"
        },
        "accountProfileDescription": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTORouteDestinationGroupDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/RouteDestinationGroupDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTORouteDestinationGroupDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTORouteDestinationGroupDTO"
        }
      },
      "description": "A generic response for API."
    },
    "SMPPProtocolClientAuthenIpProfileDTO": {
      "type": "object",
      "properties": {
        "ipAuthenId": {
          "type": "integer",
          "format": "int32"
        },
        "action": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "ipList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SMPPProtocolDTO": {
      "type": "object",
      "properties": {
        "smppProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "smppProfileName": {
          "type": "string"
        },
        "smppProfileEndPointType": {
          "type": "string"
        },
        "smppProfileDeliveryMode": {
          "type": "string"
        },
        "smppProfileAuthMode": {
          "type": "integer",
          "format": "int32"
        },
        "smppProfileAuthModeDesc": {
          "type": "string"
        },
        "smppProfileSystemId": {
          "type": "string"
        },
        "smppProfilePassword": {
          "type": "string"
        },
        "smppProfileEnquireInitTimer": {
          "type": "integer",
          "format": "int32"
        },
        "smppProfileSystemType": {
          "type": "string"
        },
        "smppProfileAddrRange": {
          "type": "string"
        },
        "smppProtocolTon": {
          "type": "integer",
          "format": "int32"
        },
        "smppProfileNpi": {
          "type": "integer",
          "format": "int32"
        },
        "smppDRType": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolIpClientList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMPPProtocolIpDTO"
          }
        },
        "smppProtocolIpServerList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SMPPProtocolIpDTO"
          }
        },
        "smppProtocolInDataCoding": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolOutDataCoding": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolOptionalUd": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolOptionalConcat": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolConvert2Gsm": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolClientAuthenIpProfileDTO": {
          "$ref": "#/definitions/SMPPProtocolClientAuthenIpProfileDTO"
        }
      }
    },
    "SMPPProtocolIpDTO": {
      "type": "object",
      "properties": {
        "smppProtocolIpId": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolIp": {
          "type": "string"
        },
        "smppProtocolIpPort": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolIpTrx": {
          "type": "string"
        },
        "smppProtocolIpMaxClient": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolIpDeInstanceId": {
          "type": "integer",
          "format": "int32"
        },
        "smppProtocolConnPriority": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PaginatedResponseDTOSMPPProtocolDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/SMPPProtocolDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOSMPPProtocolDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOSMPPProtocolDTO"
        }
      },
      "description": "A generic response for API."
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "accountId": {
          "type": "integer",
          "format": "int32"
        },
        "inStatus": {
          "type": "string"
        },
        "outStatus": {
          "type": "string"
        },
        "accountType": {
          "type": "string"
        },
        "validityType": {
          "type": "string"
        },
        "validityPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "validityOverwrite": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "priorityType": {
          "type": "string"
        },
        "priorityOverwrite": {
          "type": "integer",
          "format": "int32"
        },
        "throttle": {
          "type": "integer",
          "format": "int32"
        },
        "throughput": {
          "type": "integer",
          "format": "int32"
        },
        "fda": {
          "type": "string"
        },
        "nextRetryId": {
          "type": "integer",
          "format": "int32"
        },
        "translateIdIn": {
          "type": "integer",
          "format": "int32"
        },
        "translateIdOut": {
          "type": "integer",
          "format": "int32"
        },
        "windowTimeId": {
          "type": "integer",
          "format": "int32"
        },
        "messageMode": {
          "type": "string"
        },
        "chargingProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "routeProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "authorProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "protoId": {
          "type": "string"
        },
        "protocolProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "moduleInstanceId": {
          "type": "string"
        },
        "contentFilterId": {
          "type": "integer",
          "format": "int32"
        },
        "endPointType": {
          "type": "string"
        },
        "enableAntiSpam": {
          "type": "integer",
          "format": "int32"
        },
        "antiSpoofId": {
          "type": "integer",
          "format": "int32"
        },
        "enableHomeRoute": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "SmsTracingDTO": {
      "type": "object",
      "properties": {
        "getaParty": {
          "type": "string"
        },
        "getbParty": {
          "type": "string"
        },
        "incomingDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "incomingProtocol": {
          "type": "string"
        },
        "incomingAccount": {
          "$ref": "#/definitions/Account"
        },
        "deliveryDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "outgoingProtocol": {
          "type": "string"
        },
        "outgoingAccount": {
          "$ref": "#/definitions/Account"
        },
        "status": {
          "type": "string"
        },
        "messageID": {
          "type": "string"
        },
        "getdRDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "retryMode": {
          "type": "string"
        },
        "nextDeliveryDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "formattedDeliveryDatetime": {
          "type": "string"
        },
        "formattedNextDeliveryDatetime": {
          "type": "string"
        },
        "formattedDrDatetime": {
          "type": "string"
        },
        "formattedIncomingDatetime": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOSpamfilterProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/SpamfilterProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOSpamfilterProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOSpamfilterProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "SystemVariablesDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "allowToChange": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOSystemVariablesDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/SystemVariablesDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOSystemVariablesDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOSystemVariablesDTO"
        }
      },
      "description": "A generic response for API."
    },
    "TranslationPatternDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "transTypeId": {
          "type": "string"
        },
        "transTypeName": {
          "type": "string"
        },
        "transPatternId": {
          "type": "integer",
          "format": "int32"
        },
        "addrId": {
          "type": "string"
        },
        "transTableDescription": {
          "type": "string"
        },
        "idOfTransPattern": {
          "type": "integer",
          "format": "int32"
        },
        "transActionId": {
          "type": "string"
        },
        "addrPattern": {
          "type": "string"
        },
        "transValue": {
          "type": "string"
        },
        "ton": {
          "type": "integer",
          "format": "int32"
        },
        "tonName": {
          "type": "string"
        },
        "npi": {
          "type": "integer",
          "format": "int32"
        },
        "npiName": {
          "type": "string"
        },
        "transTonTo": {
          "type": "integer",
          "format": "int32"
        },
        "transTonToName": {
          "type": "string"
        },
        "transNpiTo": {
          "type": "integer",
          "format": "int32"
        },
        "transNpiToName": {
          "type": "string"
        },
        "transPatternProfileDescription": {
          "type": "string"
        }
      }
    },
    "TranslationProfileDTO": {
      "type": "object",
      "properties": {
        "transProfileId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "totalTranslationPattern": {
          "type": "integer",
          "format": "int32"
        },
        "translationPatternList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TranslationPatternDTO"
          }
        }
      }
    },
    "PaginatedResponseDTOTranslationPatternDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/TranslationPatternDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOTranslationPatternDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOTranslationPatternDTO"
        }
      },
      "description": "A generic response for API."
    },
    "TranslationSimulationDTO": {
      "type": "object",
      "properties": {
        "matchPattern": {
          "type": "string"
        },
        "translationAction": {
          "type": "string"
        },
        "translationValue": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "translationInput": {
          "type": "string"
        },
        "translationOutput": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOTranslationProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/TranslationProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOTranslationProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOTranslationProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "ValidityProfileDTO": {
      "type": "object",
      "properties": {
        "accountValidityValueId": {
          "type": "integer",
          "format": "int32"
        },
        "accountValidityValueType": {
          "type": "string"
        },
        "accountValidityValueValidityPeriod": {
          "type": "integer",
          "format": "int32"
        },
        "accountValidityValueDescription": {
          "type": "string"
        },
        "accountValidityValueValidityPeriodStr": {
          "type": "string"
        }
      }
    },
    "PaginatedResponseDTOValidityProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/ValidityProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOValidityProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOValidityProfileDTO"
        }
      },
      "description": "A generic response for API."
    },
    "WindowProfileDTO": {
      "type": "object",
      "properties": {
        "windowsTimeProfileWindowTimeId": {
          "type": "integer",
          "format": "int32"
        },
        "windowsTimeProfileName": {
          "type": "string"
        },
        "windowsTimeProfileWindowTimeDTOList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowTimeDTO"
          }
        },
        "windowsTimeProfileDescription": {
          "type": "string"
        }
      }
    },
    "WindowTimeDTO": {
      "type": "object",
      "properties": {
        "windowTimeId": {
          "type": "integer",
          "format": "int32"
        },
        "windowTimeStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "windowTimeEndTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "PaginatedResponseDTOWindowProfileDTO": {
      "type": "object",
      "required": [
        "list",
        "pageNumber",
        "pageSize",
        "totalPages",
        "totalRecords"
      ],
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32",
          "description": "Current page number"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32",
          "description": "Current limit per page"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32",
          "description": "Total page count base on total record and limit per page"
        },
        "totalRecords": {
          "type": "integer",
          "format": "int32",
          "description": "Total record count"
        },
        "list": {
          "type": "array",
          "description": "Response item list",
          "items": {
            "$ref": "#/definitions/WindowProfileDTO"
          }
        }
      },
      "description": "A generic response consists of paginated information."
    },
    "ResponseDTOPaginatedResponseDTOWindowProfileDTO": {
      "type": "object",
      "required": ["referenceId", "status"],
      "properties": {
        "referenceId": {
          "type": "string",
          "description": "A unique reference id for this response."
        },
        "status": {
          "type": "string",
          "description": "Status of the request, possible value is \"success\" - All went well, and (usually) some data was returned., \"fail\" - There was a problem with the data submitted, or some pre-condition of the API call wasn't satisfied. \"error\" - An error occurred in processing the request, i.e. an exception was thrown. Message property will normally have description for the error."
        },
        "message": {
          "type": "string",
          "description": "A meaningful, end-user-readable or log-worthy message, explaining what went wrong."
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "A numeric code corresponding to the error, if applicable"
        },
        "data": {
          "description": "Acts as the wrapper for any data returned by the API call. If the call returns no data, data should be set to null.",
          "$ref": "#/definitions/PaginatedResponseDTOWindowProfileDTO"
        }
      },
      "description": "A generic response for API."
    }
  }
}
